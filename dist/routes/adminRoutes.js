"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const adminController_1 = require("../controller/adminController");
const adminAuth_1 = require("../middleware/adminAuth");
const eventController_1 = require("../controller/eventController");
const reportController_1 = require("../controller/reportController");
const router = express_1.default.Router();
router.post("/login", adminController_1.adminLogin);
router.get("/user-management", adminAuth_1.verifyToken, (0, adminAuth_1.authorizeRole)("admin"), adminController_1.userManage);
router.get("/user-management/:id", adminAuth_1.verifyToken, (0, adminAuth_1.authorizeRole)("admin"), adminController_1.toggleUser);
router.get("/comment-reports", adminAuth_1.verifyToken, (0, adminAuth_1.authorizeRole)("admin"), reportController_1.reportedComments);
router.get("/event-reports", adminAuth_1.verifyToken, (0, adminAuth_1.authorizeRole)("admin"), reportController_1.reportedEvents);
router.patch("/report-comment", adminAuth_1.verifyToken, (0, adminAuth_1.authorizeRole)("admin"), reportController_1.toggleComment);
router.patch("/report-event", adminAuth_1.verifyToken, (0, adminAuth_1.authorizeRole)("admin"), reportController_1.toggleEvent);
router.get("/event-portal", adminAuth_1.verifyToken, (0, adminAuth_1.authorizeRole)("admin"), eventController_1.getAdminEvents);
router.get("/event-approve/:id", adminAuth_1.verifyToken, (0, adminAuth_1.authorizeRole)("admin"), eventController_1.approveEvent);
router.get("/dashboard", adminAuth_1.verifyToken, (0, adminAuth_1.authorizeRole)("admin"), adminController_1.dashboardStati);
exports.default = router;
